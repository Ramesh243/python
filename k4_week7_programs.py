# -*- coding: utf-8 -*-
"""K4_Week7_Programs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dxnpdo47vdpMdEwNYeRDKNiP53SH_pYu

Roll no:20131A05K4

Name: P Ajay Rahul Prasad

7) a) Write a program that converts Pandas DataFrame and Series into numpy.array
"""

import pandas as pd
import numpy as np
a=[10,20,30,40,50]
Series_a=pd.Series(a)
print("Series:\n",Series_a)
a1={'a1':(10,11,12,13,14),'a2':(15,16,17,18,19),'a3':(20,21,22,23,24)}
dframe=pd.DataFrame(a1)
print("Data frame:\n",dframe)
b=np.array(Series_a)
print("In array:\n",b)
b1=np.array(dframe)
print("In array:\n",b1)

"""7) b) Write a program that demonstrates the column selection, column addition, and
column deletion
"""

import pandas as pd
data={'Name':['Raj','Rahul','Rakesh','Ram','Rajesh'],'age':[21,22,23,21,22]}
dframe=pd.DataFrame(data)
#Column selection:
print('Column selection:')
print(dframe[['Name']])    #[[' ']] is to display column name
qual=['B.tech','B.tech','B.tech','B.tech','B.tech']
dframe['Qualification']=qual
#Column addition:
print('Column addition:')
print(dframe)
dframe.drop(['Qualification'],axis=1,inplace=True)
#Column deletion:
print('Column deletion:')
print(dframe)

"""7) c) Write a program that demonstrates the row selection, row addition, and row
deletion
"""

import pandas as pd
data={'Name':['Raj','Rahul','Rakesh','Ram','Rajesh'],'age':[21,22,23,21,22]}
dframe=pd.DataFrame(data)
#Row selection:
dframe.loc[dframe['Name']=='Rahul']

#addition
new=pd.DataFrame({'Name':'Ramesh','age':24,},index=[4])
dframe=pd.concat([new,dframe]).reset_index(drop=True)
print("-----Addition-----")
print(dframe)

#deletion
dframe.drop([0],axis=0,inplace=True)
print(dframe)

"""7) d) Get n-largest and n-smallest values from a particular column in Pandas dataFrame"""

import pandas as pd
df=pd.DataFrame([[15,9,3],[19,9,72],[9,8,80],[3,5,5]],columns=['A','B','C'],index=['i1','i2','i3','i4'])
print(df)
n=int(input("Enter n: "))
c=input("Enter column name: ")
print(df.nsmallest(n,c))
print(df.nlargest(n,c))