# -*- coding: utf-8 -*-
"""K4_Week12_Programs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AjtHKPe1mPuZ-EPhztdAt8UOR7QHgyX2

Name: Punnamaraju Ajay Rahul Prasad
 
 Roll No:20131A05K4

a) Write a Python program to demonstrate the working of namedtuple() and
_make(), _asdict().

namedtuple()
"""

from collections import namedtuple
 
# Declaring namedtuple()
Student = namedtuple('Student', ['name', 'age', 'DOB'])
 
# Adding values
S = Student('Hagrid', '65', '6-12-1928')
 
# Access using index
print("The Student age using index is : ", end="")
print(S[1])
 
# Access using name
print("The Student name using keyname is : ", end="")
print(S.name)

"""make() and asdict()"""

# importing "collections" for namedtuple()
import collections
 
# Declaring namedtuple()
Student = collections.namedtuple('Student',
                                 ['name', 'age', 'DOB'])
 
# Adding values
S = Student('Hagrid', '65', '6-12-1928')
 
# initializing iterable
li = ['Dumbledore', '116', '1-11-1881']
 
# initializing dict
di = {'name': "Harry Potter", 'age': 13, 'DOB': '31-07-1980'}
 
# using _make() to return namedtuple()
print("The namedtuple instance using iterable is  : ")
print(Student._make(di))
 
# using _asdict() to return an OrderedDict()
print("The OrderedDict instance using namedtuple is  : ")
print(S._asdict())

"""
b) Write a Python program to demonstrate the working of deque.

"""

import collections  
  
# declaring the deque  
my_deque = collections.deque([10, 20, 30, 40, 50])  
  
# using the append() function to add   
# data element at right end  
# inserting 60 at the end of the deque  
my_deque.append(60)  
  
# printing the resultant deque  
print( "The deque after appending at right: " )  
print( my_deque )  
  
# using the appendleft() function to add  
# data element at left end  
# inserting 70 at the starting of the deque  
my_deque.appendleft(70)  
  
# printing the resultant deque  
print( "The deque after appending at left: " )  
print( my_deque )  
  
# using the pop() function to remove  
# data element from the right end  
# removing 60 from the right end of deque  
my_deque.pop()  
  
# printing the resultant deque  
print( "The deque after removing from right: " )  
print( my_deque )  
  
# using the popleft() function to remove  
# data element from the left end  
# removing 70 from the left end of deque  
my_deque.popleft()  
  
# printing the resultant deque  
print("The deque after removing from left: " )  
print( my_deque )

import collections  
  
# declaring the deque  
my_deque = collections.deque(['Jan', 'Feb', 'Mar', 'Mar', 'Feb', 'April', 'Feb'])  
  
# using the index() function to print  
# the first occurrence of data element: Feb  
print( "The first occurs of 'Feb' at a position: " )  
print( my_deque.index('Feb', 2, 7) )  
  
# using the insert() function to insert  
# the data element 'Jan' at 4th position  
my_deque.insert(3,'Jan')  
  
# printing the resultant deque  
print( "The deque after inserting 'Jan' at 4th position: " )  
print( my_deque )  
  
# using the count() function to count  
# the occurrences of data element 'Feb'  
print( "The count of 'Feb' in deque: " )  
print( my_deque.count('Feb') )  
  
# using the remove() function to remove  
# the first occurrence of data element 'Mar'  
my_deque.remove('Mar')  
  
# printing the resultant deque  
print( "The deque after removing the first occurrence of 'Mar': " )  
print( my_deque )